2012-07-14  GoldenKevin  (revision 1)

	* Created /trunk folder to make layout more compliant with SVN best
	practices.

2011-09-15  GoldenKevin  (revision 2)

	* Initial import. Things currently working:
		* Can start and stop server processes individually or in a batch manner.
		Native resource acquisition and release is clean, elegant, and robust.
		* Launch configurations for processes are customizable - you can specify
		where each properties file is or where the WZ or scripts folder are.
		Some preferences are initialized to default values while some require
		the user to select a path on first startup. All of them can be edited in
		the GUI later on though.
		* You can customize the look and feel of the window. Layout is very
		loose and not at all rigid/absolute - the window will adapt to all
		platforms and all themes very elegantly.
		* Window will minimize to tray if functionality is available from the
		OS. A decent looking tray icon is provided.
		* A splash screen will assure the user that something is being done
		behind the scenes before the main window can be displayed.

2011-09-19  GoldenKevin  (revision 3)

	* Console tabs now should show a blank line after the last line of output
	* Use ProcessBuilder so that standard error is redirected to merge with
	standard output (of child process). This way, the BufferedReaders won't
	cause the input of each stream to be jumbled if they both send us data at
	almost the same time, and it makes StreamBasedConsoleTab much simpler as it
	only has to deal with one stream each for input and output.
	* InputBox's text field is disabled when the input stream is closed. This
	way, it is symmetrical with OutputBox's disableOutput method and we don't
	have to perform a null check in StreamBasedConsoleTab.textEntered since the
	text field should be disabled when openWriter is null, and hence no text can
	be entered.
	* Child process stream cleanup should be performed before calling waitFor
	on the process to avoid having to wait for a long time.

2011-11-27  GoldenKevin  (revision 4)

	* You can specify the path of the launcher properties file now instead of
	being limited to a file named launcher.properties in the current directory
	(or the directory of the .jar file if executing the archive).
	* WZ path and scripts path are now prompted earlier if those settings aren't
	assigned yet. This can be more convenient if the ArgonMS classes, the WZ
	folder, and the scripts folder are grouped with each other while all of the
	.properties files are located elsewhere.
	* Model uses the entry sets of ConcurrentHashMaps for its concurrent
	collections rather than ConcurrentLinkedQueues because they could leak
	memory when being iterated over, and they don't make much sense as queues.
	* ConsoleTab.OutputBox is made static since it doesn't rely on the instance
	variables of a ConsoleTab instance. ConsoleTab.InputBox.setEnabled() is made
	final since NetBeans complains about using overridable methods in a ctor.

2012-01-29  GoldenKevin  (revision 5)

	* Updated copyright years.

2012-03-26  GoldenKevin  (revision 6)

	* Made ServerGuiNg.jar executable on Linux.

2012-07-14  GoldenKevin  (revision 7)

	* Corrected changelog revision numbers after moving / to /trunk.
	* Renamed ServerGuiNg.jar to amsgui.jar.

2012-09-23  GoldenKevin  (revision 8)

	* Use more lightweight one element arrays rather than AtomicReferences when
	declaring final variables that can be used to share data between EDT in
	SwingUtilities.invokeAndWait and code in the calling thread.
	* ConsoleTab.OutputBox.caret's update policy is set to ALWAYS_UPDATE so we
	can avoid having to call ConsoleTab.OutputBox.setCaretPosition(getDocument()
	.getLength()) on the EDT after every call to Console.OutputBox.append.
	Handles thread-safety a bit better (caret is updated in the same mutex as
	OutputBox.append), avoids EDT scheduling on a very frequent event, and
	eliminates the need to remember to call the same code after every append if
	we plan on making more complex subclasses of ConsoleTab. Note this update
	requires Java 5, but that's a non-problem since ArgonMS requires Java 6.
	* Server Status label in Main tab now is Server Operation.

2013-02-04  GoldenKevin  (revision 9)

	* Updated copyright years.

2013-02-19  GoldenKevin  (revision 10)

	* Added support for macbanblacklist.txt feature in ArgonMS.

2013-08-11  GoldenKevin  (revision 11)

	* Added support for blockedcashshopserialnumbers.txt feature in ArgonMS.

2013-08-13  GoldenKevin  (revision 12)

	* Added support for cashshopcommodityoverrides.txt and
	cashshoplimitedcommodities.txt features in ArgonMS. Renamed
	blockedcashshopserialnumbers.txt to cashshopblockedserialnumbers.txt.
	* Rearrange layout of Launch Configuration window.

2013-08-13  GoldenKevin  (revision 13)

	* Added missing @Override annotations.
	* Use Adapter abstract classes instead of Listener interfaces to reduce
	boilerplate from unused methods.

2013-08-13  GoldenKevin  (revision 14)

	* Appending to the output box of ConsoleTab will more reliably scroll the
	output box to the bottom. Works even when the tab is not open. Will scroll
	to the very bottom of the box and not just the bottom of the last line,
	which is apparent in themes like Nimbus that have padded JTextAreas.

Copyright 2011-2013 GoldenKevin
Copying and distribution of this file, with or without modification, are
permitted provided the copyright notice and this notice are preserved.
